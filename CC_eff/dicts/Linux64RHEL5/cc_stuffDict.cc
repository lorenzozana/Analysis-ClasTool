//
// File generated by /net/data/pumpkin1/lzana/root/bin/rootcint at Thu Apr 30 20:24:19 2009

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "cc_stuffDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

/********************************************************
* dicts/Linux64RHEL5/cc_stuffDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && (__GNUC__ > 3) && (__GNUC_MINOR__ > 1)
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablecc_stuffDict();

extern "C" void G__set_cpp_environmentcc_stuffDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("cc_stuff.h");
  G__cpp_reset_tagtablecc_stuffDict();
}
#include <new>
extern "C" int G__cpp_dllrevcc_stuffDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Setting up global function */
static int G__cc_stuffDict__0_244(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) cceffn(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), (float*) G__int(libp->para[3])
, (float*) G__int(libp->para[4]), (float*) G__int(libp->para[5])
, (float*) G__int(libp->para[6])));
   return(1 || funcname || hash || result7 || libp) ;
}


/*********************************************************
* Member function Stub
*********************************************************/

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfunccc_stuffDict {
 public:
  G__Sizep2memfunccc_stuffDict(): p(&G__Sizep2memfunccc_stuffDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfunccc_stuffDict::*p)();
};

size_t G__get_sizep2memfunccc_stuffDict()
{
  G__Sizep2memfunccc_stuffDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancecc_stuffDict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablecc_stuffDict() {

   /* Setting up typedef entry */
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */
extern "C" void G__cpp_setup_memvarcc_stuffDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/

/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfunccc_stuffDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();


   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalcc_stuffDict() {
  G__cpp_setup_global0();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
   G__memfunc_setup("cceffn", 613, G__cc_stuffDict__0_244, 105, -1, -1, 0, 7, 1, 1, 0, 
"i - - 0 - run_number i - - 0 - sector_number "
"F - - 0 - point F - - 0 - dir "
"F - - 0 - Nphe F - - 0 - Nphe_err "
"F - - 0 - cc_eff", (char*) NULL
, (void*) NULL, 0);

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funccc_stuffDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablecc_stuffDict() {
}


extern "C" void G__cpp_setup_tagtablecc_stuffDict() {

   /* Setting up class,struct,union tag entry */
}
extern "C" void G__cpp_setupcc_stuffDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupcc_stuffDict()");
  G__set_cpp_environmentcc_stuffDict();
  G__cpp_setup_tagtablecc_stuffDict();

  G__cpp_setup_inheritancecc_stuffDict();

  G__cpp_setup_typetablecc_stuffDict();

  G__cpp_setup_memvarcc_stuffDict();

  G__cpp_setup_memfunccc_stuffDict();
  G__cpp_setup_globalcc_stuffDict();
  G__cpp_setup_funccc_stuffDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfunccc_stuffDict();
  return;
}
class G__cpp_setup_initcc_stuffDict {
  public:
    G__cpp_setup_initcc_stuffDict() { G__add_setup_func("cc_stuffDict",(G__incsetup)(&G__cpp_setupcc_stuffDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initcc_stuffDict() { G__remove_setup_func("cc_stuffDict"); }
};
G__cpp_setup_initcc_stuffDict G__cpp_setup_initializercc_stuffDict;

